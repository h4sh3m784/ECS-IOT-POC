{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application",
  "Resources": {
    "ServerlessDeploymentBucket": {
      "Type": "AWS::S3::Bucket"
    },
    "MyECSLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/ecs-service-dev-MyECS"
      }
    },
    "IamRoleLambdaExecution": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": {
              "Fn::Join": [
                "-",
                [
                  "dev",
                  "ecs-service",
                  "lambda"
                ]
              ]
            },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogStream"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/ecs-service-dev-MyECS:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:PutLogEvents"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/ecs-service-dev-MyECS:*:*"
                    }
                  ]
                }
              ]
            }
          }
        ],
        "Path": "/",
        "RoleName": {
          "Fn::Join": [
            "-",
            [
              "ecs-service",
              "dev",
              "eu-west-1",
              "lambdaRole"
            ]
          ]
        }
      }
    },
    "MyECSLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/ecs-service/dev/1552307524223-2019-03-11T12:32:04.223Z/ecs-service.zip"
        },
        "FunctionName": "ecs-service-dev-MyECS",
        "Handler": "handler.lambda_handler",
        "MemorySize": 512,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Runtime": "python3.6",
        "Timeout": 10
      },
      "DependsOn": [
        "MyECSLogGroup",
        "IamRoleLambdaExecution"
      ]
    },
    "MyECSLambdaVersionQdthYAZCgM2hxUh9sqgF7bXrm6JLxGVb9barGJwVA": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "MyECSLambdaFunction"
        },
        "CodeSha256": "mw8hInPc8qQwynyhB9Bb2zqqXMwJPciIQAxohlUrblw="
      }
    },
    "iotExecutionRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "ecs-tasks.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Path": "/"
      }
    },
    "iotExecutionPolicy": {
      "Type": "AWS::IAM::Policy",
      "DependsOn": "iotExecutionRole",
      "Properties": {
        "PolicyName": "iotExecutionPolicy",
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": "iot:*",
              "Resource": "*"
            }
          ]
        },
        "Roles": [
          {
            "Ref": "iotExecutionRole"
          }
        ]
      }
    },
    "DevCluster": {
      "Type": "AWS::ECS::Cluster",
      "Properties": {
        "ClusterName": "DevCluster"
      }
    },
    "XrayDaemonRepo": {
      "Type": "AWS::ECR::Repository",
      "Properties": {
        "RepositoryName": "daemon"
      }
    },
    "WebInterfaceRepo": {
      "Type": "AWS::ECR::Repository",
      "Properties": {
        "RepositoryName": "webapi"
      }
    },
    "WebInterfaceTaskDefinition": {
      "Type": "AWS::ECS::TaskDefinition",
      "DependsOn": [
        "iotExecutionRole",
        "iotExecutionPolicy",
        "XrayDaemonRepo",
        "WebInterfaceRepo"
      ],
      "Properties": {
        "Cpu": 512,
        "Memory": 1024,
        "Family": "Web-Api",
        "NetworkMode": "awsvpc",
        "TaskRoleArn": {
          "Ref": "iotExecutionRole"
        },
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "iotExecutionRole",
            "Arn"
          ]
        },
        "RequiresCompatibilities": [
          "FARGATE"
        ],
        "ContainerDefinitions": [
          {
            "Name": "xray-daemon",
            "Image": {
              "Ref": "XrayDaemonRepo"
            },
            "Cpu": 192,
            "MemoryReservation": 256,
            "PortMappings": [
              {
                "ContainerPort": 2000,
                "Protocol": "udp"
              }
            ]
          },
          {
            "Name": "WebInterface",
            "Image": {
              "Ref": "WebInterfaceRepo"
            },
            "Cpu": 192,
            "MemoryReservation": 512
          }
        ]
      }
    }
  },
  "Outputs": {
    "ServerlessDeploymentBucketName": {
      "Value": {
        "Ref": "ServerlessDeploymentBucket"
      }
    },
    "MyECSLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "MyECSLambdaVersionQdthYAZCgM2hxUh9sqgF7bXrm6JLxGVb9barGJwVA"
      }
    }
  }
}