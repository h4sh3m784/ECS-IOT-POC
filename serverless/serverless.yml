service: ecs-service

provider:
  name: aws
  runtime: python3.6
  region: eu-west-1
  memorySize: 512
  timeout: 10

functions:
  MyECS:
      handler: handler.lambda_handler

resources:
  Resources:
    LambdaIoTRule:
      Type: AWS::IoT::TopicRule
      Properties:
        RuleName: "ECSIOTRULE"
        TopicRulePayload:
          RuleDisabled: "false"
          Sql: >-  
            SELECT MessageInfo
          Actions:
            -
              Lambda:
                FunctionArn: { Fn::GetAtt: [MyECSLambdaFunction, Arn] }

    iotExecutionRole:
      Type: AWS::IAM::Role
      Properties:
          AssumeRolePolicyDocument:
            Version: "2012-10-17"
            Statement:
            -
              Effect: "Allow"
              Principal:
                Service:
                  - "ecs-tasks.amazonaws.com"
              Action:
                - "sts:AssumeRole"  
          Path: "/"

    iotExecutionPolicy:
      Type: AWS::IAM::Policy
      DependsOn: iotExecutionRole
      Properties:
        PolicyName: "iotExecutionPolicy"
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
            -
              Effect: "Allow"
              Action: "iot:*"
              Resource: "*"
        Roles:
          -
            !Ref iotExecutionRole

    DevCluster:
      Type: AWS::ECS::Cluster
      Properties:
        ClusterName: "DevCluster"

    XrayDaemonRepo:
      Type: AWS::ECR::Repository
      Properties:
        RepositoryName: "daemon"
    WebInterfaceRepo:
      Type: AWS::ECR::Repository
      Properties:
        RepositoryName: "webapi"

    WebInterfaceTaskDefinition:
      Type: AWS::ECS::TaskDefinition
      DependsOn: [iotExecutionRole, iotExecutionPolicy, XrayDaemonRepo, WebInterfaceRepo]
      Properties:
          Cpu: 512
          Memory: 1024
          Family: "Web-Api"
          NetworkMode: "awsvpc"
          TaskRoleArn: 
            Ref: iotExecutionRole
          ExecutionRoleArn: !GetAtt iotExecutionRole.Arn
          RequiresCompatibilities: 
            - FARGATE
          ContainerDefinitions:
          - Name: "xray-daemon"
            Image: !Ref XrayDaemonRepo
            Cpu: 192
            MemoryReservation: 256
            PortMappings:
              - ContainerPort: 2000
                Protocol: "udp"
                
          - Name: "WebInterface"
            Image: !Ref WebInterfaceRepo
            Cpu: 192
            MemoryReservation: 512